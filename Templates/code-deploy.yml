# Description: "CloudDeploy Infrastructure"
Parameters:
  CodeDeployApp:
    Description: "CodeDeploy Application"
    Type: String
    Default : "csye6225-webapp"

  CodeDeployS3Bucket:
    Description: "CodeDeploy S3 Bucket"
    Type: String
    Default : "codedeploy-s3bucket-test1"

  CodeDeployUser:
    Description: "UserName"
    Type: String
    Default : "ghactions"

Resources:
# Create Code Deploy Application
  CodeDeployApplication: 
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: !Ref CodeDeployApp
      ComputePlatform: Server

# Create Code Deploy IAM Server Role
  CodeDeployRole:
    Type: "AWS::IAM::Role"
    Properties:
      Path: "/"
      RoleName: "CodeDeployRoleForDeploymentGroup"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codedeploy.amazonaws.com
            Action: sts:AssumeRole
      MaxSessionDuration: 3600
      ManagedPolicyArns: 
        - "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole"
      Description: "Allows CodeDeploy to call AWS services such as Auto Scaling on your behalf."

# Create Code Deploy Deployment Group
  CodeDeployDeploymentGroup: 
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      DeploymentGroupName: csye6225-webapp-deployment
      ServiceRoleArn:  !GetAtt CodeDeployRole.Arn
      ApplicationName: !Ref CodeDeployApplication
      DeploymentConfigName: CodeDeployDefault.AllAtOnce
      DeploymentStyle:
        DeploymentType: "IN_PLACE"
        DeploymentOption: "WITHOUT_TRAFFIC_CONTROL"
      AutoRollbackConfiguration:
        Enabled: true
        Events:
          - DEPLOYMENT_FAILURE

#CodeDeploy-EC2-S3 Policy for the Server (EC2)
  CodeDeployEC2ToS3Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns: 
        - !Ref CodeDeployEC2ToS3Policy
       
           
  CodeDeployEC2ToS3Policy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: CodeDeployEC2ToS3Policy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - s3:Get*
              - s3:Put*
              - s3:List*
            Resource:
              - !Join [ "", [ "arn:aws:s3:::", !Ref CodeDeployS3Bucket ] ]
              - !Join [ "", [ "arn:aws:s3:::", !Ref CodeDeployS3Bucket, "/*" ] ]
      Users:
        - !Ref CodeDeployUser
      

  # GH-Upload-To-S3 Policy for GitHub Actions to Upload to AWS S3
  GHUploadToS3Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - s3.amazonaws.com            
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - !Ref GHUploadToS3Policy

  GHUploadToS3Policy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: GHUploadToS3Policy
      Path: /
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - s3:PutObject
            Resource:
              - !Join [ "", [ "arn:aws:s3:::", !Ref CodeDeployS3Bucket, "/*" ] ]
        
          - Effect: Allow
            Action:
              - s3:Get*
              - s3:List*
            Resource:
              - !Join [ "", [ "arn:aws:s3:::", !Ref CodeDeployS3Bucket ] ]
      Users:
        - !Ref CodeDeployUser
  
  #GH-Code-Deploy Role for GitHub Actions to Call CodeDeploy
  GHCodeDeployRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - !Ref GHCodeDeployPolicy
      
  
  GHCodeDeployPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: GHCodeDeployPolicy
      Path: /
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - codedeploy:CreateDeployment
              - codedeploy:GetDeployment
              - codedeploy:GetDeploymentConfig
              - codedeploy:RegisterApplicationRevision
              - codedeploy:GetApplicationRevision
            Resource:
              - !Join [ "", [ "arn:aws:codedeploy:", !Ref AWS::Region, ":", !Ref AWS::AccountId, ":application:", !Ref CodeDeployApp ] ]
              - !Sub arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:CodeDeployDefault.OneAtATime
              - !Sub arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:CodeDeployDefault.HalfAtATime
              - !Sub arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:CodeDeployDefault.AllAtOnce
              - !Join [ "", [ "arn:aws:codedeploy:", !Ref AWS::Region, ":", !Ref AWS::AccountId, ":deploymentgroup:", !Ref CodeDeployApp, "/*" ] ]
            
      Users:
        - !Ref CodeDeployUser
         
  